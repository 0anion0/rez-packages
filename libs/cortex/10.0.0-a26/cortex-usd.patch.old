diff --git a/SConstruct b/SConstruct
index 9e16ab8d8..b4082396e 100644
--- a/SConstruct
+++ b/SConstruct
@@ -2783,7 +2783,7 @@ usdEnvAppends = {
 		"vt",
 		"ar",
 		"plug",
-		"tracelite",
+		"trace",
 		"kind",
 		"work"
 	]
diff --git a/contrib/IECoreUSD/src/IECoreUSD/USDScene.cpp b/contrib/IECoreUSD/src/IECoreUSD/USDScene.cpp
index 381a05a95..a40c66cad 100644
--- a/contrib/IECoreUSD/src/IECoreUSD/USDScene.cpp
+++ b/contrib/IECoreUSD/src/IECoreUSD/USDScene.cpp
@@ -1651,7 +1651,8 @@ bool USDScene::hasTag( const SceneInterface::Name &name, int filter ) const
 	pxr::TfToken pxrTag;
 	convert( pxrTag, name );
 
-	pxr::UsdCollectionAPI collection = pxr::UsdCollectionAPI::GetCollection( defaultPrim.GetPrim(), pxrTag );
+    // pxr::UsdCollectionAPI collection = pxr::UsdCollectionAPI::GetCollection( defaultPrim.GetPrim(), pxrTag );
+    pxr::UsdCollectionAPI collection = pxr::UsdCollectionAPI::ApplyCollection( defaultPrim, pxrTag );
 
 	if (!collection)
 	{
@@ -1756,7 +1757,7 @@ void USDScene::writeTags( const SceneInterface::NameList &tags )
 		pxr::TfToken pxrTag;
 		convert( pxrTag, tag );
 
-		pxr::UsdCollectionAPI collection = pxr::UsdCollectionAPI::AddCollection( defaultPrim, pxrTag, pxr::UsdTokens->explicitOnly );
+		pxr::UsdCollectionAPI collection = pxr::UsdCollectionAPI::ApplyCollection( defaultPrim, pxrTag, pxr::UsdTokens->explicitOnly );
 		collection.CreateIncludesRel().AddTarget( m_location->prim.GetPath() );
 	}
 }
@@ -1828,7 +1829,8 @@ IECore::PathMatcherDataPtr USDScene::readLocalSet( const Name &name ) const
 {
 	pxr::TfToken collectionName;
 	convert( collectionName, name );
-	pxr::UsdCollectionAPI collection = pxr::UsdCollectionAPI::GetCollection( m_location->prim, collectionName );
+	// pxr::UsdCollectionAPI collection = pxr::UsdCollectionAPI::GetCollection( m_location->prim, collectionName );
+	pxr::UsdCollectionAPI collection = pxr::UsdCollectionAPI::ApplyCollection( m_location->prim, collectionName );
 
 	if( !collection )
 	{
@@ -1858,7 +1860,7 @@ void USDScene::writeSet( const Name &name, const IECore::PathMatcher &set )
 {
 	pxr::TfToken pxrSetName;
 	convert( pxrSetName, name );
-	pxr::UsdCollectionAPI collection = pxr::UsdCollectionAPI::AddCollection( m_location->prim, pxrSetName, pxr::UsdTokens->explicitOnly );
+	pxr::UsdCollectionAPI collection = pxr::UsdCollectionAPI::ApplyCollection( m_location->prim, pxrSetName, pxr::UsdTokens->explicitOnly );
 
 	for( PathMatcher::Iterator it = set.begin(); it != set.end(); ++it )
 	{
